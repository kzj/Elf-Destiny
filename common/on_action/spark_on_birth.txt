on_pregnancy_mother = {
	# TODO on-actions?
	events = {
		elf_pregnancy_events.0001
		elf_pregnancy_events.0002
	}

	on_actions = {
		on_pregnancy_mother_handle_unassigned_race
	}
}

on_pregnancy_mother_handle_unassigned_race = {
	trigger = {
		OR = {
			scope:mother = {
				urf_race_initialized = no
			}
			scope:real_father = {
				urf_race_initialized = no
			}
		}
	}
	effect = {
		debug_log = "Fixing parents race on_pregnancy_mother"
		debug_log_scopes = yes
		if = {
			limit = {
				scope:mother = {
					urf_race_initialized = no
				}
			}
			scope:mother = {
				urf_for_all_phenotypes = { APPLY = urf_base_race_init }
			}
		}
		if = {
			limit = {
				scope:real_father = {
					urf_race_initialized = no
				}
			}
			scope:real_father = {
				urf_for_all_phenotypes = { APPLY = urf_base_race_init }
			}
		}
	}
}

on_birth_child = {
	on_actions = {
		on_birth_higher_level_base_genetics
		on_birth_endless_lord
		on_birth_born_in_the_red
		on_birth_add_multi_birth_tag
		on_birth_beauty_upgrade
	}
}

# TODO: Major ascencions should only be allowed through breeding 
# if family legacy perk is unlocked, (or maybe just rarity?)

# TODO: When both parents same, should we add minor chance to reduce trait anyway?
#	- leaning strongly torwards yes

# TODO: increase odds of genetic ascencion when parent has high alignment (add to trait description)


on_birth_higher_level_base_genetics = {
	effect = {
		if = {
			limit = {
				culture = {
					has_cultural_parameter = higher_level_base_genetics_unlocked
				}
			}

			# physique_good_4_inheritance_effect = yes
			# beauty_good_4_inheritance_effect = yes
			# intellect_good_4_inheritance_effect = yes
		}
		else = {
			swap_tier_4_to_tier_3_genetic_traits = yes
		}

		if = {
			limit = {
				culture = {
					OR = {
						has_cultural_parameter = familial_familiarity_purer_blood
						has_cultural_parameter = familial_familiarity_purest_blood
					}
				}
			}

			pure_blooded_inheritance_effect = yes
		}
	}
}

# TODO handle multi-birth!
on_birth_endless_lord = {
	trigger = {
		culture = {
			has_cultural_parameter = endless_lord_active
		}
		OR = {
			scope:real_father = {
				is_ruler = yes
			}
			scope:mother = {
				is_ruler = yes
			}
		}
	}

	effect = {
		debug_log = "Beginning Endless Lord"

		# Identify Mother or Father as lord
		determine_endless_lord_parent = yes

		if = {
			limit = {
				# Check if child is first child
				NOT = {
					scope:lord_to_copy = {
						any_child = {
							count > 1
						}
					}
				}
			}

			remove_all_genetic_traits_from_child = yes
			add_endless_lord_genetic_traits = yes
			handle_endless_lord_trait_effect = yes

			debug_log = "Do it!"
			scope:child = {
				# TODO: will handle this during naming event
				# change_first_name = { template_character = scope:lord_to_copy }
				copy_inheritable_appearance_from = scope:lord_to_copy
				# TODO Gender?
			}
		}
		else = {
			debug_log = "FAILED TO TRIGGER ENDLESS LORD"
		}
	}
}

on_birth_born_in_the_red = {
	trigger = {
		scope:mother = {
			has_trait = aeluran_high_matriarch
		}
	}

	effect = {
		add_trait = born_in_the_red
	}
}

on_birth_add_multi_birth_tag = {
	effect = {
		if = {
			limit = {
				scope:mother = {
					has_character_flag = having_triplets
				}
			}
			scope:child = {
				add_character_flag = is_triplet
			}
		}
		if = {
			limit = {
				scope:mother = {
					has_character_flag = having_quadruplets
				}
			}
			scope:child = {
				add_character_flag = is_quadruplet
			}
		}
		if = {
			limit = {
				scope:mother = {
					has_character_flag = having_quintuplets
				}
			}
			scope:child = {
				add_character_flag = is_quintuplet
			}
		}
		if = {
			limit = {
				scope:mother = {
					has_character_flag = having_sextuplets
				}
			}
			scope:child = {
				add_character_flag = is_sextuplet
			}
		}
		if = {
			limit = {
				scope:mother = {
					has_character_flag = having_septuplets
				}
			}
			scope:child = {
				add_character_flag = is_septuplet
			}
		}
	}
}

on_birth_beauty_upgrade = {
	trigger = {
		NOT = {
			has_game_rule = beauty_enhanced_traits_likelihood_traits_off
		}
	}
	effect = {
		if = {
			limit = {
				has_any_beauty_trait = yes
			}

			debug_log = "on_birth_beauty_upgrade triggered"

			if = {
				limit = {
					has_game_rule = beauty_enhanced_traits_likelihood_more_common_rarity
				}
				
				random_list = {
					1 = { # Assign Base Beauty Trait
						modifier = { 
							add = 89
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 40
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 10
							has_exotic_beauty_trait = yes
						}

						set_beauty_to_conventional_effect = yes
					}	
					0 = { # Assign Unconventional Beauty Trait
						modifier = {
							add = 10
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 50
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 30
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 50
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_unconventional_effect = yes
					}
					0 = { # Assign Exotic Beauty Trait		
						modifier = {
							add = 1
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 30
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 60
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 50
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_exotic_effect = yes
					}	
				}

			}


			if = {
				limit = {
					has_game_rule = beauty_enhanced_traits_likelihood_normal_rarity
				}
					
				random_list = {
					1 = { # Assign Base Beauty Trait
						modifier = { 
							add = 989
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 400
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 100
							has_exotic_beauty_trait = yes
						}

						set_beauty_to_conventional_effect = yes
					}	
					0 = { # Assign Unconventional Beauty Trait
						modifier = {
							add = 10
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 500
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 300
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 500
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_unconventional_effect = yes
					}
					0 = { # Assign Exotic Beauty Trait		
						modifier = {
							add = 1
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 300
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 600
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 500
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_exotic_effect = yes
					}	
				}
			}

			if = {
				limit = {
					has_game_rule = beauty_enhanced_traits_likelihood_extra_rare
				}
					
				random_list = {
					1 = { # Assign Base Beauty Trait
						modifier = { 
							add = 9989
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 4000
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 1000
							has_exotic_beauty_trait = yes
						}

						set_beauty_to_conventional_effect = yes
					}	
					0 = { # Assign Unconventional Beauty Trait
						modifier = {
							add = 10
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 5000
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 3000
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 5000
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_unconventional_effect = yes
					}
					0 = { # Assign Exotic Beauty Trait		
						modifier = {
							add = 1
							has_normal_beauty_trait = yes
						}
						modifier = { 
							add = 3000
							has_unconventional_beauty_trait = yes
						}
						modifier = { 
							add = 6000
							has_exotic_beauty_trait = yes
						}

						modifier = { # Equipped Nefertiti's Armband
							add = 5000
							
							OR = {
								scope:mother = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
								scope:father = {
									any_equipped_character_artifact = {
										has_variable = nefertitis_armband
									}
								}
							}
						}

						set_beauty_to_exotic_effect = yes
					}	
				}
			}
		}
	}
}

on_birth_mother = {
	on_actions = {
		on_birth_handle_bloodline_event
	}
}

on_birth_handle_bloodline_event = {
	trigger = {
		scope:mother = {
			has_character_flag = bloodline_pregnant_event
		}
	}

	effect = {
		debug_log = "=========== on_birth_handle_bloodline_event bloodline_pregnant_event =============="
		debug_log_scopes = yes

		scope:mother = {
			remove_character_flag = bloodline_pregnant_event

			liege = {
				trigger_event = bloodline_random.0033
			}
		}
	}
}